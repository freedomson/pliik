# -*- CPERL -*-
# /=====================================================================\ #
# |  comment                                                            | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;

#**********************************************************************
# Define \name and \begin{name} to start an ignored section
# until \endname or \end{name}, respectively
sub defineExcluded {
  my($self,$name)=@_;
  $name = $name->toString if ref $name;
  my $defn = LaTeXML::Constructor->new(T_CS("\\begin{$name}"),undef,'', untex=>'',
                   afterDigest=>[sub {
				   my($whatsit)=@_;
				   my @lines = $GULLET->readRawLines("\\end{$name}\n");
				   NoteProgress("Skipped ".scalar(@lines)." for environment $name");
				   return; }]);

  $STATE->assignMeaning(T_CS("\\begin{$name}"),$defn);
  $STATE->assignMeaning(T_CS("\\$name"),$defn);
  return; }

sub defineIncluded {
  my($self,$name,$before,$after)=@_;
  $name = $name->toString if ref $name;
  # Note that we define the `magic' environment control sequences,
  # but DO NOT do any of the normal environ things, like \begingroup \endgroup!
  my $bdefn = LaTeXML::Expandable->new("\\begin{$name}",undef,
				       Tokens(($before ? $before->unlist:()),T_CS('\ignorespaces')));
  $STATE->assignMeaning(T_CS("\\$name"),$bdefn);
  $STATE->assignMeaning(T_CS("\\begin{$name}"),$bdefn);
  my $edefn = LaTeXML::Expandable->new("\\end{$name}",undef,
				       Tokens(($after ? $after->unlist:()),T_CS('\ignorespaces')));
  $STATE->assignMeaning(T_CS("\\end{$name}"),$edefn);
  $STATE->assignMeaning(T_CS("\\end$name"),$edefn);
  return; }

defineExcluded($STOMACH,'comment');

DefPrimitive('\includecomment{}',\&defineIncluded);
DefPrimitive('\excludecomment{}',\&defineExcluded);
DefPrimitive('\specialcomment{}{}{}',\&defineIncluded);
#DefPrimitive('\processcomment{}{}{}{}',);

#**********************************************************************
1;
