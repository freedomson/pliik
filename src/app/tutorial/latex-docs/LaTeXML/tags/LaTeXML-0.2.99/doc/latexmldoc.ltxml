# -*- CPERL -*-
#======================================================================
# Collected separately so I can override for LaTeXML
#======================================================================
use LaTeXML::Package;
# From latexml.sty
DefConstructor('\URL[]{}',"<a href='#2'>?#1(#1)(#2)</a>");
DefMacro('\XML',     '\URL[\texttt{XML}]{http://www.w3c.org/XML/}');
DefMacro('\HTML',    '\URL[\texttt{HTML}]{http://www.w3c.org/HTML/}');
DefMacro('\XHTML',   '\URL[\texttt{XHTML}]{http://www.w3c.org/XHTML/}');
DefMacro('\MathML',  '\URL[\texttt{MathML}]{http://www.w3c.org/Math/}');
DefMacro('\OpenMath','\URL[\texttt{OpenMath}]{http://www.openmath.org/}');
DefMacro('\LaTeXML', '\URL[\texttt{LaTeXML}]{http://dlmf.nist.gov/LaTeXML/}');


RequirePackage('graphicx');

# Various other typographic bits
DefMacro('\cmd {}','\texttt{#1}');
DefMacro('\code {}','\texttt{#1}');
DefMacro('\method {}','\texttt{->#1}');
DefMacro('\tag {}','\texttt{#1}');
DefMacro('\perldoc {}','\texttt{perldoc #1}');

# Perverse!
DefMacro('\perldoc{}', '\URL[\texttt{#1}]{\@perldocurl{#1}}');
DefMacro('\@perldocurl[]{}', sub { 
 my($defn,$file,$pkg)=@_;
 $pkg = $pkg->toString;
 $pkg =~ s|::|/|;
 $file = $file->toString if $file; 
 if($file){
   $file =~ s|::|/|;
   T_OTHER("perldoc/$file.html#$pkg"); }
 else {
   T_OTHER("perldoc/$pkg.html"); }});

DefMacro('\pkg[]{}', '\URL[\texttt{#2}]{\@perldocurl[#1]{#2}}');


#======================================================================
1;
