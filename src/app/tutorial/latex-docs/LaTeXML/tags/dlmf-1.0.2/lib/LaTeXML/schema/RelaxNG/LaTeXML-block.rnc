# /=====================================================================\ 
# |  LaTeXML-block.rnc                                                  |
# | RelaxNG model for LaTeXML generated documents                       |
# |=====================================================================|
# | Part of LaTeXML:                                                    |
# |  Public domain software, produced as part of work done by the       |
# |  United States Government & not subject to copyright in the US.     |
# |=====================================================================|
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     |
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    |
# \=========================================================ooo==U==ooo=/

default namespace = "http://dlmf.nist.gov/LaTeXML"

## The block module defines the following `physical' block elements.
Block.class |= 
   p | equation | equationgroup | quote | block | listingblock
 | itemize | enumerate | description


## Additionally, it defines these miscellaneous elements that can appear
## in both inline and block contexts.
Misc.class  |= inline-block | verbatim | break | graphics

## Additional Metadata that can be present in equations.
EquationMeta.class = constraint

#======================================================================

p =
## A physical paragraph.
element p { p_attributes, p_model }

## Attributes for \elementref{p}.
p_attributes = Common.attributes, ID.attributes, Positionable.attributes

## Content model for \elementref{p}.
p_model = Inline.model

#======================================================================

constraint = 
## A constraint upon an equation.
element constraint { constraint_attributes, constraint_model }

## Attributes for \elementref{constraint}.
constraint_attributes =
  attribute hidden { xsd:boolean }?

## Content model for \elementref{constraint}.
constraint_model = Inline.model

#======================================================================

equation =
## An Equation.  The model is just Inline which includes \elementref{Math},
## the main expected ingredient.
## However, other things can end up in display math, too, so we use Inline.
## Note that tabular is here only because it's a common, if misguided, idiom;
## the processor will lift such elements out of math, when possible
element equation { equation_attributes, equation_model }

## Attributes for \elementref{equation}.
equation_attributes =  Common.attributes, Labelled.attributes

## Content model for \elementref{equation}.
equation_model = (Math | MathFork  | \text | tabular | Meta.class | EquationMeta.class)* 

#======================================================================

equationgroup =
## A group of equations, perhaps aligned (Though this is nowhere recorded).
element equationgroup { equationgroup_attributes, equationgroup_model }

## Attributes for \elementref{equationgroup}.
equationgroup_attributes = Common.attributes, Labelled.attributes

## Content model for \elementref{equationgroup}.
equationgroup_model = (equationgroup | equation | p | Meta.class | EquationMeta.class)*

#======================================================================

MathFork =
## A wrapper for Math that provides alternative,
## but typically less semantically meaningful,
## formatted representations.
## The first child is the meaningful form,
## the extra children provide formatted forms,
## for example being table rows or cells arising from an eqnarray.
element MathFork { MathFork_attributes, MathFork_model }

## Attributes for \elementref{MathFork}.
MathFork_attributes = Common.attributes

## Content model for \elementref{MathFork}.
MathFork_model = Math, MathBranch*

#======================================================================

MathBranch =
## A container for an alternatively formatted math representation.
element MathBranch { MathBranch_attributes, MathBranch_model }

## Attributes for \elementref{MathBranch}.
MathBranch_attributes =
  Common.attributes,
  attribute format { text }?

## Content model for \elementref{MathBranch}.
MathBranch_model =  (Math|tr|td)*

#======================================================================

quote =
## A quotation.
element quote { quote_attributes, quote_model }

## Attributes for \elementref{quote}.
quote_attributes = Common.attributes, ID.attributes

## Content model for \elementref{quote}.
quote_model = Block.model
# This was Inline.model, but since quotes can be arbitrarily complex
# including equations, etc, not just verse, should be Block.model, perhaps even Para.model?

#======================================================================

block =
## A generic block (fallback).
element block { block_attributes, block_model }

## Attributes for \elementref{block}.
block_attributes = Common.attributes, ID.attributes, Positionable.attributes

## Content model for \elementref{block}.
block_model = Inline.model

#======================================================================

listingblock =
## An in-block Listing, without caption
element listingblock { listingblock_attributes, listingblock_model }

## Attributes for \elementref{listingblock}.
listingblock_attributes = Common.attributes, Labelled.attributes

## Content model for \elementref{listingblock}.
listingblock_model = Block.model*

#======================================================================

break =
## A forced line break.
element break {  break_attributes, break_model }

## Attributes for \elementref{break}.
break_attributes = Common.attributes

## Content model for \elementref{break}.
break_model = empty

#======================================================================

inline-block =
## An inline block. Actually, can appear in inline or block mode, but
## typesets its contents as a block.
element inline-block { inline-block_attributes, inline-block_model }

## Attributes for \elementref{inline-block}.
inline-block_attributes = Common.attributes, ID.attributes, Positionable.attributes

## Content model for \elementref{inline-block}.
inline-block_model = Block.model

#======================================================================

verbatim =
## Verbatim content
element verbatim { verbatim_attributes, verbatim_model }

## Attributes for \elementref{verbatim}.
verbatim_attributes =
  Common.attributes,
  ID.attributes,
  ## the font to use; generally typewriter.
  attribute font { text }?

## Content model for \elementref{verbatim}.
verbatim_model = Inline.model

#======================================================================

itemize =
## An itemized list.
element itemize { itemize_attributes, itemize_model }



## Attributes for \elementref{itemize}.
itemize_attributes = Common.attributes, ID.attributes

## Content model for \elementref{itemize}.
itemize_model = item*

#======================================================================

enumerate =
## An enumerated list.
element enumerate { enumerate_attributes, enumerate_model }

## Attributes for \elementref{enumerate}.
enumerate_attributes = Common.attributes, ID.attributes

## Content model for \elementref{enumerate}.
enumerate_model = item*

#======================================================================

description =
## A description list. The \elementref{item}s within are expected to have a \elementref{tag}
## which represents the term being described in each \elementref{item}.
element description { description_attributes, description_model }

## Attributes for \elementref{description}.
description_attributes = Common.attributes, ID.attributes

## Content model for \elementref{description}.
description_model = item*

#======================================================================

item =
## An item within a list.
element item { item_attributes, item_model }

## Attributes for \elementref{item}.
item_attributes = Common.attributes, Labelled.attributes

## Content model for \elementref{item}.
item_model =   tag?, Para.model

#======================================================================

tag =
## A tag within an item indicating the term or bullet for a given item.
element tag { tag_attributes, tag_model }

## Attributes for \elementref{tag}.
tag_attributes =
  Common.attributes,

  ## specifies an open delimiters used to display the tag.
  attribute open { text }?,

  ## specifies an close delimiters used to display the tag.
  attribute close { text }?

## Content model for \elementref{tag}.
tag_model = Inline.model

#======================================================================

graphics =
## A graphical insertion of an external file. 
element graphics { graphics_attributes, graphics_model }

## Attributes for \elementref{graphics}.
graphics_attributes =
  Common.attributes,
  ID.attributes,
  Imageable.attributes,

  ## the path to the graphics file. This is the (often minimally specified) path
  ## to a graphics file omitting the type extension.  Once resolved to a specific
  ## image file, the \attr{imagesrc} (from Imageable.attributes) is used.
  attribute graphic { text }?,

  ## a comma separated list of candidate graphics files that could be used to
  ## for \attr{graphic}.  A post-processor or application may choose from these,
  ## or may make its own selection or synthesis to implement the graphic for a given target.
  attribute candidates { text }?,

  ## an encoding of the scaling and positioning options
  ## to be used in processing the graphic.
  attribute options { text }?


## Content model for \elementref{graphics}.
graphics_model = empty

#======================================================================
